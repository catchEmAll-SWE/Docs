-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File JSON images:     Matteo
    nome: images.json
    Usato aka database per le immagini. Sarà strutturato come segue, per cui ogni elemento avrà:
    -) id: Id dell'immagine che ci fornisce unsplash;
    -) class: Classe di appartenenza dell'immagine definita da noi;
    -) reliability: Valore booleano con 1 è sicura, 0 no;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
File JSON captcha:
    nome: captcha.json
    Usato per memorizzare i captcha buttati fuori. Sarà strutturato come segue, per cui ogni elemento avrà:
    -) id: Sarà generato dalla algoritmo "Hash Captcha";
    -) solution: Stringa generata da algoritmo "generazione soluzione"
    -) Timestamp: Tempo di quando è stato stabilito;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Pagina html:    Matteo
    Pagina semplice con una form con richiesta POST nella quale vi sono 9 placeholder i quali saranno le immagini fatte con grid e 
    riempite tramite php
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Algoritmo di lettura file JSON immagini:     Nicola
    Utilizzando il file JSON immagini e captcha e gli algoritmi citati sotto dovrà fare:
    -) Richiama decisionAllForClasses;
    -) Richiama new Captcha(immagini.json, lista<classe> suddivisioneImmaginiPerClasse, str sceltaClasseTask)
    -) Richiama writingCaptcha;
    -) Invia il captcha a chi l'ha richiesto;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Algoritmo decisionClasses: Anna 
    lista<ClassImage> decisioneClassi(immagini.json)
    Individua il numero di classi da (2-4) in maniera randomica le cui immagini saranno presenti nel captcha da fornire;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Algoritmo imageSplitting: Anna
    lista<Classe> suddivisioneImmaginiPerClasse(lista<ClassImage> decisioneClassi)
    Suddivide le 9 immagini per le classi identificate;
    aka {mele:2, banane:4, pere:3}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Algoritmo taskClassChoice: Anna
    str taskClassChoice(lista<ClassImage> suddivisioneImmagini)
    Decide la classe da identificare come task di classificazione;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Algoritmo imageSplittingByClass  Anna
    lista<ClassImage> imageSplittingByClass(lista<ClassImage> suddivisioneImmagini)
    Per ogni classe identifica tramite il numero di immagini assegnate precedentemente il numero di immagini sicure da assegnare e 
    il numero di immagini non sicure da dare, almeno una sicura;
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Algoritmo solutionGeneration: Nicola
    str generazioneSoluzione(Captcha captcha)
    Ritorna una stringa con la soluzione del captcha
    aka 102310231
    dove:
        -) 0 --> Immagine sicura della classe non Task, non deve essere premuta l'immagine
        -) 1 --> Immagine sicura della classe Task, deve essere premuta l'immagine 
        -) 2 --> Immagine non sicura della classe non Task, non dovrebbe essere premuta ma puo essere sbagliata l'immagine
        -) 3 --> Immagine non sicura della classe Task, quindi se la preme meglio ma non obbligatoria
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Classe ClassImage: Nicola
    name str;
    total int;
    safe int;
    notsafe int;

    costruttore ClassImage(str name){Nome=nome;}
    Set void Totale(int totale){Totale=Totale}
    ecc ecc
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Algoritmo writingCaptcha: Nicola
    void scritturaCaptcha(captcha.txt, Captcha captcha)
    Scrive nel file JSON immagini il captcha generato e ritorna i
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Classe Captcha{ Nicola
    lista<image> immagini;
    id
    timestamp
    classeTask;
    soluzione str
    
    Captcha(immagini.json, lista<classe> suddivisioneImmaginiPerClasse, str sceltaClasseTask){
        classeTask = sceltaClasseTask
        sceltaDelleImmagini(immagini.json, lista<classe> suddivisioneImmaginiPerClasse);
        hashCaptcha();
    }

    void choiceOfImages(immagini.json, lista<classe> suddivisioneImmaginiPerClasse){
        crea la lista<immagine> immagini 
    }
    
    void hashCaptcha(){
        creata lista<immagine> immagini con il loro id crea e setta id di captcha
    }

    x y z
    k j m
    p g a
    x = 0; y = 1; z = 2; k = 3 ecc ecc
}
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Classe image: Nicola
    Id
    NomeClasse str
    Sicura
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------